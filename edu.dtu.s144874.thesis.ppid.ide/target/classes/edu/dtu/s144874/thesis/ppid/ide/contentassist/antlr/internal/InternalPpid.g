/*
 * generated by Xtext 2.24.0
 */
grammar InternalPpid;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package edu.dtu.s144874.thesis.ppid.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package edu.dtu.s144874.thesis.ppid.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import edu.dtu.s144874.thesis.ppid.services.PpidGrammarAccess;

}
@parser::members {
	private PpidGrammarAccess grammarAccess;

	public void setGrammarAccess(PpidGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRawQuery
entryRuleRawQuery
:
{ before(grammarAccess.getRawQueryRule()); }
	 ruleRawQuery
{ after(grammarAccess.getRawQueryRule()); } 
	 EOF 
;

// Rule RawQuery
ruleRawQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRawQueryAccess().getGroup()); }
		(rule__RawQuery__Group__0)
		{ after(grammarAccess.getRawQueryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConfig
entryRuleConfig
:
{ before(grammarAccess.getConfigRule()); }
	 ruleConfig
{ after(grammarAccess.getConfigRule()); } 
	 EOF 
;

// Rule Config
ruleConfig 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConfigAccess().getGroup()); }
		(rule__Config__Group__0)
		{ after(grammarAccess.getConfigAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity
entryRuleEntity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getGroup()); }
		(rule__Entity__Group__0)
		{ after(grammarAccess.getEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSource
entryRuleSource
:
{ before(grammarAccess.getSourceRule()); }
	 ruleSource
{ after(grammarAccess.getSourceRule()); } 
	 EOF 
;

// Rule Source
ruleSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceAccess().getGroup()); }
		(rule__Source__Group__0)
		{ after(grammarAccess.getSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRawSource
entryRuleRawSource
:
{ before(grammarAccess.getRawSourceRule()); }
	 ruleRawSource
{ after(grammarAccess.getRawSourceRule()); } 
	 EOF 
;

// Rule RawSource
ruleRawSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRawSourceAccess().getGroup()); }
		(rule__RawSource__Group__0)
		{ after(grammarAccess.getRawSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSink
entryRuleSink
:
{ before(grammarAccess.getSinkRule()); }
	 ruleSink
{ after(grammarAccess.getSinkRule()); } 
	 EOF 
;

// Rule Sink
ruleSink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSinkAccess().getGroup()); }
		(rule__Sink__Group__0)
		{ after(grammarAccess.getSinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayType
entryRuleArrayType
:
{ before(grammarAccess.getArrayTypeRule()); }
	 ruleArrayType
{ after(grammarAccess.getArrayTypeRule()); } 
	 EOF 
;

// Rule ArrayType
ruleArrayType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayTypeAccess().getGroup()); }
		(rule__ArrayType__Group__0)
		{ after(grammarAccess.getArrayTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntityReference
entryRuleEntityReference
:
{ before(grammarAccess.getEntityReferenceRule()); }
	 ruleEntityReference
{ after(grammarAccess.getEntityReferenceRule()); } 
	 EOF 
;

// Rule EntityReference
ruleEntityReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityReferenceAccess().getEntityAssignment()); }
		(rule__EntityReference__EntityAssignment)
		{ after(grammarAccess.getEntityReferenceAccess().getEntityAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleDataType
entryRuleSimpleDataType
:
{ before(grammarAccess.getSimpleDataTypeRule()); }
	 ruleSimpleDataType
{ after(grammarAccess.getSimpleDataTypeRule()); } 
	 EOF 
;

// Rule SimpleDataType
ruleSimpleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleDataTypeAccess().getTypeAssignment()); }
		(rule__SimpleDataType__TypeAssignment)
		{ after(grammarAccess.getSimpleDataTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperty
entryRuleProperty
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyAccess().getGroup()); }
		(rule__Property__Group__0)
		{ after(grammarAccess.getPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdate
entryRuleUpdate
:
{ before(grammarAccess.getUpdateRule()); }
	 ruleUpdate
{ after(grammarAccess.getUpdateRule()); } 
	 EOF 
;

// Rule Update
ruleUpdate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateAccess().getAlternatives()); }
		(rule__Update__Alternatives)
		{ after(grammarAccess.getUpdateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutputProperty
entryRuleOutputProperty
:
{ before(grammarAccess.getOutputPropertyRule()); }
	 ruleOutputProperty
{ after(grammarAccess.getOutputPropertyRule()); } 
	 EOF 
;

// Rule OutputProperty
ruleOutputProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputPropertyAccess().getGroup()); }
		(rule__OutputProperty__Group__0)
		{ after(grammarAccess.getOutputPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutput
entryRuleOutput
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputAccess().getGroup()); }
		(rule__Output__Group__0)
		{ after(grammarAccess.getOutputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActivity
entryRuleActivity
:
{ before(grammarAccess.getActivityRule()); }
	 ruleActivity
{ after(grammarAccess.getActivityRule()); } 
	 EOF 
;

// Rule Activity
ruleActivity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActivityAccess().getGroup()); }
		(rule__Activity__Group__0)
		{ after(grammarAccess.getActivityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredicates
entryRulePredicates
:
{ before(grammarAccess.getPredicatesRule()); }
	 rulePredicates
{ after(grammarAccess.getPredicatesRule()); } 
	 EOF 
;

// Rule Predicates
rulePredicates 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicatesAccess().getGroup()); }
		(rule__Predicates__Group__0)
		{ after(grammarAccess.getPredicatesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredicate
entryRulePredicate
:
{ before(grammarAccess.getPredicateRule()); }
	 rulePredicate
{ after(grammarAccess.getPredicateRule()); } 
	 EOF 
;

// Rule Predicate
rulePredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicateAccess().getGroup()); }
		(rule__Predicate__Group__0)
		{ after(grammarAccess.getPredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrigger
entryRuleTrigger
:
{ before(grammarAccess.getTriggerRule()); }
	 ruleTrigger
{ after(grammarAccess.getTriggerRule()); } 
	 EOF 
;

// Rule Trigger
ruleTrigger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTriggerAccess().getGroup()); }
		(rule__Trigger__Group__0)
		{ after(grammarAccess.getTriggerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommand
entryRuleCommand
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandAccess().getAlternatives()); }
		(rule__Command__Alternatives)
		{ after(grammarAccess.getCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutputCommand
entryRuleOutputCommand
:
{ before(grammarAccess.getOutputCommandRule()); }
	 ruleOutputCommand
{ after(grammarAccess.getOutputCommandRule()); } 
	 EOF 
;

// Rule OutputCommand
ruleOutputCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputCommandAccess().getGroup()); }
		(rule__OutputCommand__Group__0)
		{ after(grammarAccess.getOutputCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtendedExpression
entryRuleExtendedExpression
:
{ before(grammarAccess.getExtendedExpressionRule()); }
	 ruleExtendedExpression
{ after(grammarAccess.getExtendedExpressionRule()); } 
	 EOF 
;

// Rule ExtendedExpression
ruleExtendedExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtendedExpressionAccess().getGroup()); }
		(rule__ExtendedExpression__Group__0)
		{ after(grammarAccess.getExtendedExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRightExpression
entryRuleRightExpression
:
{ before(grammarAccess.getRightExpressionRule()); }
	 ruleRightExpression
{ after(grammarAccess.getRightExpressionRule()); } 
	 EOF 
;

// Rule RightExpression
ruleRightExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRightExpressionAccess().getGroup()); }
		(rule__RightExpression__Group__0)
		{ after(grammarAccess.getRightExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionPart
entryRuleExpressionPart
:
{ before(grammarAccess.getExpressionPartRule()); }
	 ruleExpressionPart
{ after(grammarAccess.getExpressionPartRule()); } 
	 EOF 
;

// Rule ExpressionPart
ruleExpressionPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionPartAccess().getAlternatives()); }
		(rule__ExpressionPart__Alternatives)
		{ after(grammarAccess.getExpressionPartAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatefulPropertyReference
entryRuleStatefulPropertyReference
:
{ before(grammarAccess.getStatefulPropertyReferenceRule()); }
	 ruleStatefulPropertyReference
{ after(grammarAccess.getStatefulPropertyReferenceRule()); } 
	 EOF 
;

// Rule StatefulPropertyReference
ruleStatefulPropertyReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatefulPropertyReferenceAccess().getAlternatives()); }
		(rule__StatefulPropertyReference__Alternatives)
		{ after(grammarAccess.getStatefulPropertyReferenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobalVar
entryRuleGlobalVar
:
{ before(grammarAccess.getGlobalVarRule()); }
	 ruleGlobalVar
{ after(grammarAccess.getGlobalVarRule()); } 
	 EOF 
;

// Rule GlobalVar
ruleGlobalVar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalVarAccess().getGroup()); }
		(rule__GlobalVar__Group__0)
		{ after(grammarAccess.getGlobalVarAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetVarCommand
entryRuleSetVarCommand
:
{ before(grammarAccess.getSetVarCommandRule()); }
	 ruleSetVarCommand
{ after(grammarAccess.getSetVarCommandRule()); } 
	 EOF 
;

// Rule SetVarCommand
ruleSetVarCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetVarCommandAccess().getGroup()); }
		(rule__SetVarCommand__Group__0)
		{ after(grammarAccess.getSetVarCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcess
entryRuleProcess
:
{ before(grammarAccess.getProcessRule()); }
	 ruleProcess
{ after(grammarAccess.getProcessRule()); } 
	 EOF 
;

// Rule Process
ruleProcess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessAccess().getGroup()); }
		(rule__Process__Group__0)
		{ after(grammarAccess.getProcessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnection
entryRuleConnection
:
{ before(grammarAccess.getConnectionRule()); }
	 ruleConnection
{ after(grammarAccess.getConnectionRule()); } 
	 EOF 
;

// Rule Connection
ruleConnection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectionAccess().getGroup()); }
		(rule__Connection__Group__0)
		{ after(grammarAccess.getConnectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateAbove
entryRuleUpdateAbove
:
{ before(grammarAccess.getUpdateAboveRule()); }
	 ruleUpdateAbove
{ after(grammarAccess.getUpdateAboveRule()); } 
	 EOF 
;

// Rule UpdateAbove
ruleUpdateAbove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateAboveAccess().getGroup()); }
		(rule__UpdateAbove__Group__0)
		{ after(grammarAccess.getUpdateAboveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateBelow
entryRuleUpdateBelow
:
{ before(grammarAccess.getUpdateBelowRule()); }
	 ruleUpdateBelow
{ after(grammarAccess.getUpdateBelowRule()); } 
	 EOF 
;

// Rule UpdateBelow
ruleUpdateBelow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateBelowAccess().getGroup()); }
		(rule__UpdateBelow__Group__0)
		{ after(grammarAccess.getUpdateBelowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateChange
entryRuleUpdateChange
:
{ before(grammarAccess.getUpdateChangeRule()); }
	 ruleUpdateChange
{ after(grammarAccess.getUpdateChangeRule()); } 
	 EOF 
;

// Rule UpdateChange
ruleUpdateChange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateChangeAccess().getGroup()); }
		(rule__UpdateChange__Group__0)
		{ after(grammarAccess.getUpdateChangeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateIs
entryRuleUpdateIs
:
{ before(grammarAccess.getUpdateIsRule()); }
	 ruleUpdateIs
{ after(grammarAccess.getUpdateIsRule()); } 
	 EOF 
;

// Rule UpdateIs
ruleUpdateIs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateIsAccess().getGroup()); }
		(rule__UpdateIs__Group__0)
		{ after(grammarAccess.getUpdateIsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateNot
entryRuleUpdateNot
:
{ before(grammarAccess.getUpdateNotRule()); }
	 ruleUpdateNot
{ after(grammarAccess.getUpdateNotRule()); } 
	 EOF 
;

// Rule UpdateNot
ruleUpdateNot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateNotAccess().getGroup()); }
		(rule__UpdateNot__Group__0)
		{ after(grammarAccess.getUpdateNotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnectionType
entryRuleConnectionType
:
{ before(grammarAccess.getConnectionTypeRule()); }
	 ruleConnectionType
{ after(grammarAccess.getConnectionTypeRule()); } 
	 EOF 
;

// Rule ConnectionType
ruleConnectionType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectionTypeAccess().getAlternatives()); }
		(rule__ConnectionType__Alternatives)
		{ after(grammarAccess.getConnectionTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOneWayConnection
entryRuleOneWayConnection
:
{ before(grammarAccess.getOneWayConnectionRule()); }
	 ruleOneWayConnection
{ after(grammarAccess.getOneWayConnectionRule()); } 
	 EOF 
;

// Rule OneWayConnection
ruleOneWayConnection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOneWayConnectionAccess().getHyphenMinusGreaterThanSignKeyword()); }
		'->'
		{ after(grammarAccess.getOneWayConnectionAccess().getHyphenMinusGreaterThanSignKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBothWayConnection
entryRuleBothWayConnection
:
{ before(grammarAccess.getBothWayConnectionRule()); }
	 ruleBothWayConnection
{ after(grammarAccess.getBothWayConnectionRule()); } 
	 EOF 
;

// Rule BothWayConnection
ruleBothWayConnection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBothWayConnectionAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword()); }
		'<->'
		{ after(grammarAccess.getBothWayConnectionAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperator
entryRuleOperator
:
{ before(grammarAccess.getOperatorRule()); }
	 ruleOperator
{ after(grammarAccess.getOperatorRule()); } 
	 EOF 
;

// Rule Operator
ruleOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
		(rule__Operator__Alternatives)
		{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusOperator
entryRulePlusOperator
:
{ before(grammarAccess.getPlusOperatorRule()); }
	 rulePlusOperator
{ after(grammarAccess.getPlusOperatorRule()); } 
	 EOF 
;

// Rule PlusOperator
rulePlusOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusOperatorAccess().getPlusSignKeyword()); }
		'+'
		{ after(grammarAccess.getPlusOperatorAccess().getPlusSignKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMinusOperator
entryRuleMinusOperator
:
{ before(grammarAccess.getMinusOperatorRule()); }
	 ruleMinusOperator
{ after(grammarAccess.getMinusOperatorRule()); } 
	 EOF 
;

// Rule MinusOperator
ruleMinusOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMinusOperatorAccess().getHyphenMinusKeyword()); }
		'-'
		{ after(grammarAccess.getMinusOperatorAccess().getHyphenMinusKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicationOperator
entryRuleMultiplicationOperator
:
{ before(grammarAccess.getMultiplicationOperatorRule()); }
	 ruleMultiplicationOperator
{ after(grammarAccess.getMultiplicationOperatorRule()); } 
	 EOF 
;

// Rule MultiplicationOperator
ruleMultiplicationOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicationOperatorAccess().getAsteriskKeyword()); }
		'*'
		{ after(grammarAccess.getMultiplicationOperatorAccess().getAsteriskKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDivisionOperator
entryRuleDivisionOperator
:
{ before(grammarAccess.getDivisionOperatorRule()); }
	 ruleDivisionOperator
{ after(grammarAccess.getDivisionOperatorRule()); } 
	 EOF 
;

// Rule DivisionOperator
ruleDivisionOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDivisionOperatorAccess().getSolidusKeyword()); }
		'/'
		{ after(grammarAccess.getDivisionOperatorAccess().getSolidusKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule PrimitiveType
rulePrimitiveType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
		(rule__PrimitiveType__Alternatives)
		{ after(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getEntitesAssignment_3_0()); }
		(rule__Model__EntitesAssignment_3_0)
		{ after(grammarAccess.getModelAccess().getEntitesAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getSourcesAssignment_3_1()); }
		(rule__Model__SourcesAssignment_3_1)
		{ after(grammarAccess.getModelAccess().getSourcesAssignment_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getSinksAssignment_3_2()); }
		(rule__Model__SinksAssignment_3_2)
		{ after(grammarAccess.getModelAccess().getSinksAssignment_3_2()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getProcessesAssignment_3_3()); }
		(rule__Model__ProcessesAssignment_3_3)
		{ after(grammarAccess.getModelAccess().getProcessesAssignment_3_3()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getRawQueriesAssignment_3_4()); }
		(rule__Model__RawQueriesAssignment_3_4)
		{ after(grammarAccess.getModelAccess().getRawQueriesAssignment_3_4()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getRawSourcesAssignment_3_5()); }
		(rule__Model__RawSourcesAssignment_3_5)
		{ after(grammarAccess.getModelAccess().getRawSourcesAssignment_3_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getEntityReferenceParserRuleCall_0()); }
		ruleEntityReference
		{ after(grammarAccess.getTypeAccess().getEntityReferenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getSimpleDataTypeParserRuleCall_1()); }
		ruleSimpleDataType
		{ after(grammarAccess.getTypeAccess().getSimpleDataTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getArrayTypeParserRuleCall_2()); }
		ruleArrayType
		{ after(grammarAccess.getTypeAccess().getArrayTypeParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getUpdateAboveParserRuleCall_0()); }
		ruleUpdateAbove
		{ after(grammarAccess.getUpdateAccess().getUpdateAboveParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUpdateAccess().getUpdateBelowParserRuleCall_1()); }
		ruleUpdateBelow
		{ after(grammarAccess.getUpdateAccess().getUpdateBelowParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getUpdateAccess().getUpdateChangeParserRuleCall_2()); }
		ruleUpdateChange
		{ after(grammarAccess.getUpdateAccess().getUpdateChangeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getUpdateAccess().getUpdateIsParserRuleCall_3()); }
		ruleUpdateIs
		{ after(grammarAccess.getUpdateAccess().getUpdateIsParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getUpdateAccess().getUpdateNotParserRuleCall_4()); }
		ruleUpdateNot
		{ after(grammarAccess.getUpdateAccess().getUpdateNotParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getSetVarCommandParserRuleCall_0()); }
		ruleSetVarCommand
		{ after(grammarAccess.getCommandAccess().getSetVarCommandParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getOutputCommandParserRuleCall_1()); }
		ruleOutputCommand
		{ after(grammarAccess.getCommandAccess().getOutputCommandParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionPart__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionPartAccess().getRefAssignment_0()); }
		(rule__ExpressionPart__RefAssignment_0)
		{ after(grammarAccess.getExpressionPartAccess().getRefAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionPartAccess().getValueAssignment_1()); }
		(rule__ExpressionPart__ValueAssignment_1)
		{ after(grammarAccess.getExpressionPartAccess().getValueAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionPartAccess().getStringValueAssignment_2()); }
		(rule__ExpressionPart__StringValueAssignment_2)
		{ after(grammarAccess.getExpressionPartAccess().getStringValueAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatefulPropertyReference__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatefulPropertyReferenceAccess().getGroup_0()); }
		(rule__StatefulPropertyReference__Group_0__0)
		{ after(grammarAccess.getStatefulPropertyReferenceAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatefulPropertyReferenceAccess().getGroup_1()); }
		(rule__StatefulPropertyReference__Group_1__0)
		{ after(grammarAccess.getStatefulPropertyReferenceAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetVarCommand__AssignmentAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetVarCommandAccess().getAssignmentExtendedExpressionParserRuleCall_3_0_0()); }
		ruleExtendedExpression
		{ after(grammarAccess.getSetVarCommandAccess().getAssignmentExtendedExpressionParserRuleCall_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSetVarCommandAccess().getAssignmentOutputParserRuleCall_3_0_1()); }
		ruleOutput
		{ after(grammarAccess.getSetVarCommandAccess().getAssignmentOutputParserRuleCall_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateIs__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateIsAccess().getNAssignment_2_0()); }
		(rule__UpdateIs__NAssignment_2_0)
		{ after(grammarAccess.getUpdateIsAccess().getNAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getUpdateIsAccess().getSAssignment_2_1()); }
		(rule__UpdateIs__SAssignment_2_1)
		{ after(grammarAccess.getUpdateIsAccess().getSAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateNot__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateNotAccess().getNAssignment_2_0()); }
		(rule__UpdateNot__NAssignment_2_0)
		{ after(grammarAccess.getUpdateNotAccess().getNAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getUpdateNotAccess().getSAssignment_2_1()); }
		(rule__UpdateNot__SAssignment_2_1)
		{ after(grammarAccess.getUpdateNotAccess().getSAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionTypeAccess().getOneWayConnectionParserRuleCall_0()); }
		ruleOneWayConnection
		{ after(grammarAccess.getConnectionTypeAccess().getOneWayConnectionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConnectionTypeAccess().getBothWayConnectionParserRuleCall_1()); }
		ruleBothWayConnection
		{ after(grammarAccess.getConnectionTypeAccess().getBothWayConnectionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getPlusOperatorParserRuleCall_0()); }
		rulePlusOperator
		{ after(grammarAccess.getOperatorAccess().getPlusOperatorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getMinusOperatorParserRuleCall_1()); }
		ruleMinusOperator
		{ after(grammarAccess.getOperatorAccess().getMinusOperatorParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getMultiplicationOperatorParserRuleCall_2()); }
		ruleMultiplicationOperator
		{ after(grammarAccess.getOperatorAccess().getMultiplicationOperatorParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getDivisionOperatorParserRuleCall_3()); }
		ruleDivisionOperator
		{ after(grammarAccess.getOperatorAccess().getDivisionOperatorParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getNumberEnumLiteralDeclaration_0()); }
		('number')
		{ after(grammarAccess.getPrimitiveTypeAccess().getNumberEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getStringEnumLiteralDeclaration_1()); }
		('string')
		{ after(grammarAccess.getPrimitiveTypeAccess().getStringEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModelAction_0()); }
	()
	{ after(grammarAccess.getModelAccess().getModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getConfigAssignment_1()); }
	(rule__Model__ConfigAssignment_1)?
	{ after(grammarAccess.getModelAccess().getConfigAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGlobalsVarsAssignment_2()); }
	(rule__Model__GlobalsVarsAssignment_2)*
	{ after(grammarAccess.getModelAccess().getGlobalsVarsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getAlternatives_3()); }
	(rule__Model__Alternatives_3)*
	{ after(grammarAccess.getModelAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RawQuery__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RawQuery__Group__0__Impl
	rule__RawQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RawQuery__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRawQueryAccess().getNumberSignKeyword_0()); }
	'#'
	{ after(grammarAccess.getRawQueryAccess().getNumberSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RawQuery__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RawQuery__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RawQuery__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRawQueryAccess().getTextAssignment_1()); }
	(rule__RawQuery__TextAssignment_1)
	{ after(grammarAccess.getRawQueryAccess().getTextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__0__Impl
	rule__Config__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getConfigAction_0()); }
	()
	{ after(grammarAccess.getConfigAccess().getConfigAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__1__Impl
	rule__Config__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getConfigKeyword_1()); }
	'config'
	{ after(grammarAccess.getConfigAccess().getConfigKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__2__Impl
	rule__Config__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getConfigAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__3__Impl
	rule__Config__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getGroup_3()); }
	(rule__Config__Group_3__0)?
	{ after(grammarAccess.getConfigAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__4__Impl
	rule__Config__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getGroup_4()); }
	(rule__Config__Group_4__0)?
	{ after(grammarAccess.getConfigAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__5__Impl
	rule__Config__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getGroup_5()); }
	(rule__Config__Group_5__0)?
	{ after(grammarAccess.getConfigAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getConfigAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group_3__0__Impl
	rule__Config__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getClienIdKeyword_3_0()); }
	'clienId'
	{ after(grammarAccess.getConfigAccess().getClienIdKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group_3__1__Impl
	rule__Config__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getColonKeyword_3_1()); }
	':'
	{ after(grammarAccess.getConfigAccess().getColonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getClientIdAssignment_3_2()); }
	(rule__Config__ClientIdAssignment_3_2)
	{ after(grammarAccess.getConfigAccess().getClientIdAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group_4__0__Impl
	rule__Config__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getUrlKeyword_4_0()); }
	'url'
	{ after(grammarAccess.getConfigAccess().getUrlKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group_4__1__Impl
	rule__Config__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getColonKeyword_4_1()); }
	':'
	{ after(grammarAccess.getConfigAccess().getColonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getUrlAssignment_4_2()); }
	(rule__Config__UrlAssignment_4_2)
	{ after(grammarAccess.getConfigAccess().getUrlAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group_5__0__Impl
	rule__Config__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getWindowKeyword_5_0()); }
	'window'
	{ after(grammarAccess.getConfigAccess().getWindowKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group_5__1__Impl
	rule__Config__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getColonKeyword_5_1()); }
	':'
	{ after(grammarAccess.getConfigAccess().getColonKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getWindowAssignment_5_2()); }
	(rule__Config__WindowAssignment_5_2)
	{ after(grammarAccess.getConfigAccess().getWindowAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
	'entity'
	{ after(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
	(rule__Entity__NameAssignment_1)
	{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getPropertiesAssignment_3()); }
	(rule__Entity__PropertiesAssignment_3)*
	{ after(grammarAccess.getEntityAccess().getPropertiesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__0__Impl
	rule__Source__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getSourceKeyword_0()); }
	'source'
	{ after(grammarAccess.getSourceAccess().getSourceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__1__Impl
	rule__Source__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getNameAssignment_1()); }
	(rule__Source__NameAssignment_1)
	{ after(grammarAccess.getSourceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__2__Impl
	rule__Source__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getTopicAssignment_2()); }
	(rule__Source__TopicAssignment_2)
	{ after(grammarAccess.getSourceAccess().getTopicAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__3__Impl
	rule__Source__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getSourceAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getEntityAssignment_4()); }
	(rule__Source__EntityAssignment_4)
	{ after(grammarAccess.getSourceAccess().getEntityAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RawSource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RawSource__Group__0__Impl
	rule__RawSource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RawSource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRawSourceAccess().getRawsourceKeyword_0()); }
	'rawsource'
	{ after(grammarAccess.getRawSourceAccess().getRawsourceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RawSource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RawSource__Group__1__Impl
	rule__RawSource__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RawSource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRawSourceAccess().getNameAssignment_1()); }
	(rule__RawSource__NameAssignment_1)
	{ after(grammarAccess.getRawSourceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RawSource__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RawSource__Group__2__Impl
	rule__RawSource__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RawSource__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRawSourceAccess().getInputAssignment_2()); }
	(rule__RawSource__InputAssignment_2)
	{ after(grammarAccess.getRawSourceAccess().getInputAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RawSource__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RawSource__Group__3__Impl
	rule__RawSource__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RawSource__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRawSourceAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getRawSourceAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RawSource__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RawSource__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RawSource__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRawSourceAccess().getEntityAssignment_4()); }
	(rule__RawSource__EntityAssignment_4)
	{ after(grammarAccess.getRawSourceAccess().getEntityAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sink__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sink__Group__0__Impl
	rule__Sink__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sink__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkAccess().getSinkKeyword_0()); }
	'sink'
	{ after(grammarAccess.getSinkAccess().getSinkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sink__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sink__Group__1__Impl
	rule__Sink__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sink__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkAccess().getNameAssignment_1()); }
	(rule__Sink__NameAssignment_1)
	{ after(grammarAccess.getSinkAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sink__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sink__Group__2__Impl
	rule__Sink__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sink__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getSinkAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sink__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sink__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sink__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkAccess().getEntityAssignment_3()); }
	(rule__Sink__EntityAssignment_3)
	{ after(grammarAccess.getSinkAccess().getEntityAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__0__Impl
	rule__ArrayType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__1__Impl
	rule__ArrayType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getTypeAssignment_1()); }
	(rule__ArrayType__TypeAssignment_1)
	{ after(grammarAccess.getArrayTypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getNameAssignment_0()); }
	(rule__Property__NameAssignment_0)
	{ after(grammarAccess.getPropertyAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__1__Impl
	rule__Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getPropertyAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getTypeAssignment_2()); }
	(rule__Property__TypeAssignment_2)
	{ after(grammarAccess.getPropertyAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputProperty__Group__0__Impl
	rule__OutputProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputPropertyAccess().getPropertyAssignment_0()); }
	(rule__OutputProperty__PropertyAssignment_0)
	{ after(grammarAccess.getOutputPropertyAccess().getPropertyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputProperty__Group__1__Impl
	rule__OutputProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputPropertyAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getOutputPropertyAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputPropertyAccess().getExpAssignment_2()); }
	(rule__OutputProperty__ExpAssignment_2)
	{ after(grammarAccess.getOutputPropertyAccess().getExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__0__Impl
	rule__Output__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getOutputAction_0()); }
	()
	{ after(grammarAccess.getOutputAccess().getOutputAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__1__Impl
	rule__Output__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getOutputAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__2__Impl
	rule__Output__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getPropertiesAssignment_2()); }
	(rule__Output__PropertiesAssignment_2)
	{ after(grammarAccess.getOutputAccess().getPropertiesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__3__Impl
	rule__Output__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getGroup_3()); }
	(rule__Output__Group_3__0)*
	{ after(grammarAccess.getOutputAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getOutputAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_3__0__Impl
	rule__Output__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getOutputAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getPropertiesAssignment_3_1()); }
	(rule__Output__PropertiesAssignment_3_1)
	{ after(grammarAccess.getOutputAccess().getPropertiesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Activity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Activity__Group__0__Impl
	rule__Activity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActivityAccess().getActivityKeyword_0()); }
	'activity'
	{ after(grammarAccess.getActivityAccess().getActivityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Activity__Group__1__Impl
	rule__Activity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActivityAccess().getNameAssignment_1()); }
	(rule__Activity__NameAssignment_1)
	{ after(grammarAccess.getActivityAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Activity__Group__2__Impl
	rule__Activity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActivityAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getActivityAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Activity__Group__3__Impl
	rule__Activity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActivityAccess().getTriggerAssignment_3()); }
	(rule__Activity__TriggerAssignment_3)*
	{ after(grammarAccess.getActivityAccess().getTriggerAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Activity__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActivityAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getActivityAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicates__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicates__Group__0__Impl
	rule__Predicates__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicates__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatesAccess().getPredicatesAssignment_0()); }
	(rule__Predicates__PredicatesAssignment_0)
	{ after(grammarAccess.getPredicatesAccess().getPredicatesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicates__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicates__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicates__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatesAccess().getGroup_1()); }
	(rule__Predicates__Group_1__0)*
	{ after(grammarAccess.getPredicatesAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicates__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicates__Group_1__0__Impl
	rule__Predicates__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicates__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatesAccess().getAndKeyword_1_0()); }
	'and'
	{ after(grammarAccess.getPredicatesAccess().getAndKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicates__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicates__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicates__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatesAccess().getPredicatesAssignment_1_1()); }
	(rule__Predicates__PredicatesAssignment_1_1)
	{ after(grammarAccess.getPredicatesAccess().getPredicatesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__0__Impl
	rule__Predicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getSourceAssignment_0()); }
	(rule__Predicate__SourceAssignment_0)
	{ after(grammarAccess.getPredicateAccess().getSourceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__1__Impl
	rule__Predicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getPredicateAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__2__Impl
	rule__Predicate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getPropertyAssignment_2()); }
	(rule__Predicate__PropertyAssignment_2)
	{ after(grammarAccess.getPredicateAccess().getPropertyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__3__Impl
	rule__Predicate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getFullStopKeyword_3()); }
	'.'
	{ after(grammarAccess.getPredicateAccess().getFullStopKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getUpdateAssignment_4()); }
	(rule__Predicate__UpdateAssignment_4)
	{ after(grammarAccess.getPredicateAccess().getUpdateAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group__0__Impl
	rule__Trigger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getOnKeyword_0()); }
	'on'
	{ after(grammarAccess.getTriggerAccess().getOnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group__1__Impl
	rule__Trigger__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getPredicatesAssignment_1()); }
	(rule__Trigger__PredicatesAssignment_1)
	{ after(grammarAccess.getTriggerAccess().getPredicatesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getGroup_2()); }
	(rule__Trigger__Group_2__0)?
	{ after(grammarAccess.getTriggerAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_2__0__Impl
	rule__Trigger__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getEqualsSignGreaterThanSignKeyword_2_0()); }
	'=>'
	{ after(grammarAccess.getTriggerAccess().getEqualsSignGreaterThanSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getCommandAssignment_2_1()); }
	(rule__Trigger__CommandAssignment_2_1)
	{ after(grammarAccess.getTriggerAccess().getCommandAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputCommand__Group__0__Impl
	rule__OutputCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputCommandAccess().getOutputAssignment_0()); }
	(rule__OutputCommand__OutputAssignment_0)?
	{ after(grammarAccess.getOutputCommandAccess().getOutputAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputCommand__Group__1__Impl
	rule__OutputCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputCommandAccess().getIntoKeyword_1()); }
	'into'
	{ after(grammarAccess.getOutputCommandAccess().getIntoKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputCommand__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputCommandAccess().getSinkAssignment_2()); }
	(rule__OutputCommand__SinkAssignment_2)
	{ after(grammarAccess.getOutputCommandAccess().getSinkAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendedExpression__Group__0__Impl
	rule__ExtendedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendedExpressionAccess().getLeftAssignment_0()); }
	(rule__ExtendedExpression__LeftAssignment_0)
	{ after(grammarAccess.getExtendedExpressionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendedExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendedExpressionAccess().getRightAssignment_1()); }
	(rule__ExtendedExpression__RightAssignment_1)*
	{ after(grammarAccess.getExtendedExpressionAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightExpression__Group__0__Impl
	rule__RightExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightExpressionAccess().getOperatorAssignment_0()); }
	(rule__RightExpression__OperatorAssignment_0)
	{ after(grammarAccess.getRightExpressionAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightExpressionAccess().getExpAssignment_1()); }
	(rule__RightExpression__ExpAssignment_1)
	{ after(grammarAccess.getRightExpressionAccess().getExpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatefulPropertyReference__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatefulPropertyReference__Group_0__0__Impl
	rule__StatefulPropertyReference__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatefulPropertyReference__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatefulPropertyReferenceAccess().getSourceAssignment_0_0()); }
	(rule__StatefulPropertyReference__SourceAssignment_0_0)
	{ after(grammarAccess.getStatefulPropertyReferenceAccess().getSourceAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatefulPropertyReference__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatefulPropertyReference__Group_0__1__Impl
	rule__StatefulPropertyReference__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatefulPropertyReference__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatefulPropertyReferenceAccess().getFullStopKeyword_0_1()); }
	'.'
	{ after(grammarAccess.getStatefulPropertyReferenceAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatefulPropertyReference__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatefulPropertyReference__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatefulPropertyReference__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatefulPropertyReferenceAccess().getPropertyAssignment_0_2()); }
	(rule__StatefulPropertyReference__PropertyAssignment_0_2)
	{ after(grammarAccess.getStatefulPropertyReferenceAccess().getPropertyAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatefulPropertyReference__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatefulPropertyReference__Group_1__0__Impl
	rule__StatefulPropertyReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatefulPropertyReference__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatefulPropertyReferenceAccess().getGroup_1_0()); }
	(rule__StatefulPropertyReference__Group_1_0__0)
	{ after(grammarAccess.getStatefulPropertyReferenceAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatefulPropertyReference__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatefulPropertyReference__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatefulPropertyReference__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatefulPropertyReferenceAccess().getGroup_1_1()); }
	(rule__StatefulPropertyReference__Group_1_1__0)?
	{ after(grammarAccess.getStatefulPropertyReferenceAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatefulPropertyReference__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatefulPropertyReference__Group_1_0__0__Impl
	rule__StatefulPropertyReference__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatefulPropertyReference__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatefulPropertyReferenceAccess().getGlobalKeyword_1_0_0()); }
	'global.'
	{ after(grammarAccess.getStatefulPropertyReferenceAccess().getGlobalKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatefulPropertyReference__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatefulPropertyReference__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatefulPropertyReference__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatefulPropertyReferenceAccess().getSourceAssignment_1_0_1()); }
	(rule__StatefulPropertyReference__SourceAssignment_1_0_1)
	{ after(grammarAccess.getStatefulPropertyReferenceAccess().getSourceAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatefulPropertyReference__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatefulPropertyReference__Group_1_1__0__Impl
	rule__StatefulPropertyReference__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatefulPropertyReference__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatefulPropertyReferenceAccess().getFullStopKeyword_1_1_0()); }
	'.'
	{ after(grammarAccess.getStatefulPropertyReferenceAccess().getFullStopKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatefulPropertyReference__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatefulPropertyReference__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatefulPropertyReference__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatefulPropertyReferenceAccess().getPropertyAssignment_1_1_1()); }
	(rule__StatefulPropertyReference__PropertyAssignment_1_1_1)
	{ after(grammarAccess.getStatefulPropertyReferenceAccess().getPropertyAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVar__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVar__Group__0__Impl
	rule__GlobalVar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVar__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVarAccess().getLetKeyword_0()); }
	'let'
	{ after(grammarAccess.getGlobalVarAccess().getLetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVar__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVar__Group__1__Impl
	rule__GlobalVar__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVar__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVarAccess().getNameAssignment_1()); }
	(rule__GlobalVar__NameAssignment_1)
	{ after(grammarAccess.getGlobalVarAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVar__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVar__Group__2__Impl
	rule__GlobalVar__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVar__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVarAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getGlobalVarAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVar__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVar__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVar__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVarAccess().getTypeAssignment_3()); }
	(rule__GlobalVar__TypeAssignment_3)
	{ after(grammarAccess.getGlobalVarAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetVarCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetVarCommand__Group__0__Impl
	rule__SetVarCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetVarCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetVarCommandAccess().getSetKeyword_0()); }
	'set'
	{ after(grammarAccess.getSetVarCommandAccess().getSetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetVarCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetVarCommand__Group__1__Impl
	rule__SetVarCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetVarCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetVarCommandAccess().getIdAssignment_1()); }
	(rule__SetVarCommand__IdAssignment_1)
	{ after(grammarAccess.getSetVarCommandAccess().getIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetVarCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetVarCommand__Group__2__Impl
	rule__SetVarCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetVarCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetVarCommandAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getSetVarCommandAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetVarCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetVarCommand__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetVarCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetVarCommandAccess().getAssignmentAssignment_3()); }
	(rule__SetVarCommand__AssignmentAssignment_3)
	{ after(grammarAccess.getSetVarCommandAccess().getAssignmentAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__0__Impl
	rule__Process__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getProcessKeyword_0()); }
	'process'
	{ after(grammarAccess.getProcessAccess().getProcessKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__1__Impl
	rule__Process__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getNameAssignment_1()); }
	(rule__Process__NameAssignment_1)
	{ after(grammarAccess.getProcessAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__2__Impl
	rule__Process__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getProcessAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__3__Impl
	rule__Process__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getActivitiesAssignment_3()); }
	(rule__Process__ActivitiesAssignment_3)*
	{ after(grammarAccess.getProcessAccess().getActivitiesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__4__Impl
	rule__Process__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getConnectionsAssignment_4()); }
	(rule__Process__ConnectionsAssignment_4)*
	{ after(grammarAccess.getProcessAccess().getConnectionsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getProcessAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__0__Impl
	rule__Connection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getLeftAssignment_0()); }
	(rule__Connection__LeftAssignment_0)
	{ after(grammarAccess.getConnectionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__1__Impl
	rule__Connection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getConnectionAssignment_1()); }
	(rule__Connection__ConnectionAssignment_1)
	{ after(grammarAccess.getConnectionAccess().getConnectionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getRightAssignment_2()); }
	(rule__Connection__RightAssignment_2)
	{ after(grammarAccess.getConnectionAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateAbove__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateAbove__Group__0__Impl
	rule__UpdateAbove__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAbove__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAboveAccess().getAboveKeyword_0()); }
	'above'
	{ after(grammarAccess.getUpdateAboveAccess().getAboveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAbove__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateAbove__Group__1__Impl
	rule__UpdateAbove__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAbove__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAboveAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getUpdateAboveAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAbove__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateAbove__Group__2__Impl
	rule__UpdateAbove__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAbove__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAboveAccess().getNAssignment_2()); }
	(rule__UpdateAbove__NAssignment_2)
	{ after(grammarAccess.getUpdateAboveAccess().getNAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAbove__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateAbove__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAbove__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAboveAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getUpdateAboveAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateBelow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateBelow__Group__0__Impl
	rule__UpdateBelow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateBelow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateBelowAccess().getBelowKeyword_0()); }
	'below'
	{ after(grammarAccess.getUpdateBelowAccess().getBelowKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateBelow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateBelow__Group__1__Impl
	rule__UpdateBelow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateBelow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateBelowAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getUpdateBelowAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateBelow__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateBelow__Group__2__Impl
	rule__UpdateBelow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateBelow__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateBelowAccess().getNAssignment_2()); }
	(rule__UpdateBelow__NAssignment_2)
	{ after(grammarAccess.getUpdateBelowAccess().getNAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateBelow__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateBelow__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateBelow__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateBelowAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getUpdateBelowAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateChange__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateChange__Group__0__Impl
	rule__UpdateChange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateChangeAccess().getChangeKeyword_0()); }
	'change'
	{ after(grammarAccess.getUpdateChangeAccess().getChangeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateChange__Group__1__Impl
	rule__UpdateChange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateChangeAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getUpdateChangeAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateChange__Group__2__Impl
	rule__UpdateChange__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateChangeAccess().getNAssignment_2()); }
	(rule__UpdateChange__NAssignment_2)
	{ after(grammarAccess.getUpdateChangeAccess().getNAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateChange__Group__3__Impl
	rule__UpdateChange__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateChangeAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getUpdateChangeAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateChange__Group__4__Impl
	rule__UpdateChange__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateChangeAccess().getMAssignment_4()); }
	(rule__UpdateChange__MAssignment_4)
	{ after(grammarAccess.getUpdateChangeAccess().getMAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateChange__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateChangeAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getUpdateChangeAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateIs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateIs__Group__0__Impl
	rule__UpdateIs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateIs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateIsAccess().getIsKeyword_0()); }
	'is'
	{ after(grammarAccess.getUpdateIsAccess().getIsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateIs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateIs__Group__1__Impl
	rule__UpdateIs__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateIs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateIsAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getUpdateIsAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateIs__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateIs__Group__2__Impl
	rule__UpdateIs__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateIs__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateIsAccess().getAlternatives_2()); }
	(rule__UpdateIs__Alternatives_2)
	{ after(grammarAccess.getUpdateIsAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateIs__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateIs__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateIs__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateIsAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getUpdateIsAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateNot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateNot__Group__0__Impl
	rule__UpdateNot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateNot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateNotAccess().getNotKeyword_0()); }
	'not'
	{ after(grammarAccess.getUpdateNotAccess().getNotKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateNot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateNot__Group__1__Impl
	rule__UpdateNot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateNot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateNotAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getUpdateNotAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateNot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateNot__Group__2__Impl
	rule__UpdateNot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateNot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateNotAccess().getAlternatives_2()); }
	(rule__UpdateNot__Alternatives_2)
	{ after(grammarAccess.getUpdateNotAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateNot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateNot__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateNot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateNotAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getUpdateNotAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ConfigAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getConfigConfigParserRuleCall_1_0()); }
		ruleConfig
		{ after(grammarAccess.getModelAccess().getConfigConfigParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__GlobalsVarsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getGlobalsVarsGlobalVarParserRuleCall_2_0()); }
		ruleGlobalVar
		{ after(grammarAccess.getModelAccess().getGlobalsVarsGlobalVarParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__EntitesAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getEntitesEntityParserRuleCall_3_0_0()); }
		ruleEntity
		{ after(grammarAccess.getModelAccess().getEntitesEntityParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__SourcesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getSourcesSourceParserRuleCall_3_1_0()); }
		ruleSource
		{ after(grammarAccess.getModelAccess().getSourcesSourceParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__SinksAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getSinksSinkParserRuleCall_3_2_0()); }
		ruleSink
		{ after(grammarAccess.getModelAccess().getSinksSinkParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ProcessesAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getProcessesProcessParserRuleCall_3_3_0()); }
		ruleProcess
		{ after(grammarAccess.getModelAccess().getProcessesProcessParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__RawQueriesAssignment_3_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getRawQueriesRawQueryParserRuleCall_3_4_0()); }
		ruleRawQuery
		{ after(grammarAccess.getModelAccess().getRawQueriesRawQueryParserRuleCall_3_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__RawSourcesAssignment_3_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getRawSourcesRawSourceParserRuleCall_3_5_0()); }
		ruleRawSource
		{ after(grammarAccess.getModelAccess().getRawSourcesRawSourceParserRuleCall_3_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RawQuery__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRawQueryAccess().getTextSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getRawQueryAccess().getTextSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__ClientIdAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigAccess().getClientIdSTRINGTerminalRuleCall_3_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getConfigAccess().getClientIdSTRINGTerminalRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__UrlAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigAccess().getUrlSTRINGTerminalRuleCall_4_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getConfigAccess().getUrlSTRINGTerminalRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__WindowAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigAccess().getWindowSTRINGTerminalRuleCall_5_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getConfigAccess().getWindowSTRINGTerminalRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__PropertiesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getPropertiesPropertyParserRuleCall_3_0()); }
		ruleProperty
		{ after(grammarAccess.getEntityAccess().getPropertiesPropertyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSourceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__TopicAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getTopicSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getSourceAccess().getTopicSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__EntityAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getEntityEntityCrossReference_4_0()); }
		(
			{ before(grammarAccess.getSourceAccess().getEntityEntityIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSourceAccess().getEntityEntityIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getSourceAccess().getEntityEntityCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RawSource__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRawSourceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRawSourceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RawSource__InputAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRawSourceAccess().getInputSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getRawSourceAccess().getInputSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RawSource__EntityAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRawSourceAccess().getEntityEntityCrossReference_4_0()); }
		(
			{ before(grammarAccess.getRawSourceAccess().getEntityEntityIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRawSourceAccess().getEntityEntityIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getRawSourceAccess().getEntityEntityCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sink__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSinkAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSinkAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sink__EntityAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSinkAccess().getEntityEntityCrossReference_3_0()); }
		(
			{ before(grammarAccess.getSinkAccess().getEntityEntityIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSinkAccess().getEntityEntityIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getSinkAccess().getEntityEntityCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getArrayTypeAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityReference__EntityAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityReferenceAccess().getEntityEntityCrossReference_0()); }
		(
			{ before(grammarAccess.getEntityReferenceAccess().getEntityEntityIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEntityReferenceAccess().getEntityEntityIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getEntityReferenceAccess().getEntityEntityCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleDataType__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleDataTypeAccess().getTypePrimitiveTypeEnumRuleCall_0()); }
		rulePrimitiveType
		{ after(grammarAccess.getSimpleDataTypeAccess().getTypePrimitiveTypeEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getPropertyAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputProperty__PropertyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputPropertyAccess().getPropertyPropertyCrossReference_0_0()); }
		(
			{ before(grammarAccess.getOutputPropertyAccess().getPropertyPropertyIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOutputPropertyAccess().getPropertyPropertyIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getOutputPropertyAccess().getPropertyPropertyCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputProperty__ExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputPropertyAccess().getExpExtendedExpressionParserRuleCall_2_0()); }
		ruleExtendedExpression
		{ after(grammarAccess.getOutputPropertyAccess().getExpExtendedExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__PropertiesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getPropertiesOutputPropertyParserRuleCall_2_0()); }
		ruleOutputProperty
		{ after(grammarAccess.getOutputAccess().getPropertiesOutputPropertyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__PropertiesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getPropertiesOutputPropertyParserRuleCall_3_1_0()); }
		ruleOutputProperty
		{ after(grammarAccess.getOutputAccess().getPropertiesOutputPropertyParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActivityAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getActivityAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__TriggerAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActivityAccess().getTriggerTriggerParserRuleCall_3_0()); }
		ruleTrigger
		{ after(grammarAccess.getActivityAccess().getTriggerTriggerParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicates__PredicatesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicatesAccess().getPredicatesPredicateParserRuleCall_0_0()); }
		rulePredicate
		{ after(grammarAccess.getPredicatesAccess().getPredicatesPredicateParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicates__PredicatesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicatesAccess().getPredicatesPredicateParserRuleCall_1_1_0()); }
		rulePredicate
		{ after(grammarAccess.getPredicatesAccess().getPredicatesPredicateParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__SourceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getSourceSourceCrossReference_0_0()); }
		(
			{ before(grammarAccess.getPredicateAccess().getSourceSourceIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPredicateAccess().getSourceSourceIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getPredicateAccess().getSourceSourceCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__PropertyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getPropertyPropertyCrossReference_2_0()); }
		(
			{ before(grammarAccess.getPredicateAccess().getPropertyPropertyIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPredicateAccess().getPropertyPropertyIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getPredicateAccess().getPropertyPropertyCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__UpdateAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getUpdateUpdateParserRuleCall_4_0()); }
		ruleUpdate
		{ after(grammarAccess.getPredicateAccess().getUpdateUpdateParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__PredicatesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getPredicatesPredicatesParserRuleCall_1_0()); }
		rulePredicates
		{ after(grammarAccess.getTriggerAccess().getPredicatesPredicatesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__CommandAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getCommandCommandParserRuleCall_2_1_0()); }
		ruleCommand
		{ after(grammarAccess.getTriggerAccess().getCommandCommandParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputCommand__OutputAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputCommandAccess().getOutputOutputParserRuleCall_0_0()); }
		ruleOutput
		{ after(grammarAccess.getOutputCommandAccess().getOutputOutputParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputCommand__SinkAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputCommandAccess().getSinkSinkCrossReference_2_0()); }
		(
			{ before(grammarAccess.getOutputCommandAccess().getSinkSinkIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOutputCommandAccess().getSinkSinkIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getOutputCommandAccess().getSinkSinkCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedExpression__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendedExpressionAccess().getLeftExpressionPartParserRuleCall_0_0()); }
		ruleExpressionPart
		{ after(grammarAccess.getExtendedExpressionAccess().getLeftExpressionPartParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedExpression__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendedExpressionAccess().getRightRightExpressionParserRuleCall_1_0()); }
		ruleRightExpression
		{ after(grammarAccess.getExtendedExpressionAccess().getRightRightExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightExpression__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightExpressionAccess().getOperatorOperatorParserRuleCall_0_0()); }
		ruleOperator
		{ after(grammarAccess.getRightExpressionAccess().getOperatorOperatorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightExpression__ExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightExpressionAccess().getExpExpressionPartParserRuleCall_1_0()); }
		ruleExpressionPart
		{ after(grammarAccess.getRightExpressionAccess().getExpExpressionPartParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionPart__RefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionPartAccess().getRefStatefulPropertyReferenceParserRuleCall_0_0()); }
		ruleStatefulPropertyReference
		{ after(grammarAccess.getExpressionPartAccess().getRefStatefulPropertyReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionPart__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionPartAccess().getValueINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getExpressionPartAccess().getValueINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionPart__StringValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionPartAccess().getStringValueSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getExpressionPartAccess().getStringValueSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatefulPropertyReference__SourceAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatefulPropertyReferenceAccess().getSourceSourceCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getStatefulPropertyReferenceAccess().getSourceSourceIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStatefulPropertyReferenceAccess().getSourceSourceIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getStatefulPropertyReferenceAccess().getSourceSourceCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatefulPropertyReference__PropertyAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatefulPropertyReferenceAccess().getPropertyPropertyCrossReference_0_2_0()); }
		(
			{ before(grammarAccess.getStatefulPropertyReferenceAccess().getPropertyPropertyIDTerminalRuleCall_0_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStatefulPropertyReferenceAccess().getPropertyPropertyIDTerminalRuleCall_0_2_0_1()); }
		)
		{ after(grammarAccess.getStatefulPropertyReferenceAccess().getPropertyPropertyCrossReference_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatefulPropertyReference__SourceAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatefulPropertyReferenceAccess().getSourceGlobalVarCrossReference_1_0_1_0()); }
		(
			{ before(grammarAccess.getStatefulPropertyReferenceAccess().getSourceGlobalVarIDTerminalRuleCall_1_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStatefulPropertyReferenceAccess().getSourceGlobalVarIDTerminalRuleCall_1_0_1_0_1()); }
		)
		{ after(grammarAccess.getStatefulPropertyReferenceAccess().getSourceGlobalVarCrossReference_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatefulPropertyReference__PropertyAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatefulPropertyReferenceAccess().getPropertyPropertyCrossReference_1_1_1_0()); }
		(
			{ before(grammarAccess.getStatefulPropertyReferenceAccess().getPropertyPropertyIDTerminalRuleCall_1_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStatefulPropertyReferenceAccess().getPropertyPropertyIDTerminalRuleCall_1_1_1_0_1()); }
		)
		{ after(grammarAccess.getStatefulPropertyReferenceAccess().getPropertyPropertyCrossReference_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVar__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalVarAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getGlobalVarAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVar__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalVarAccess().getTypeTypeParserRuleCall_3_0()); }
		ruleType
		{ after(grammarAccess.getGlobalVarAccess().getTypeTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetVarCommand__IdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetVarCommandAccess().getIdGlobalVarCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSetVarCommandAccess().getIdGlobalVarIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSetVarCommandAccess().getIdGlobalVarIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSetVarCommandAccess().getIdGlobalVarCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetVarCommand__AssignmentAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetVarCommandAccess().getAssignmentAlternatives_3_0()); }
		(rule__SetVarCommand__AssignmentAlternatives_3_0)
		{ after(grammarAccess.getSetVarCommandAccess().getAssignmentAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__ActivitiesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getActivitiesActivityParserRuleCall_3_0()); }
		ruleActivity
		{ after(grammarAccess.getProcessAccess().getActivitiesActivityParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__ConnectionsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getConnectionsConnectionParserRuleCall_4_0()); }
		ruleConnection
		{ after(grammarAccess.getProcessAccess().getConnectionsConnectionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionAccess().getLeftActivityCrossReference_0_0()); }
		(
			{ before(grammarAccess.getConnectionAccess().getLeftActivityIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConnectionAccess().getLeftActivityIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getConnectionAccess().getLeftActivityCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__ConnectionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionAccess().getConnectionConnectionTypeParserRuleCall_1_0()); }
		ruleConnectionType
		{ after(grammarAccess.getConnectionAccess().getConnectionConnectionTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionAccess().getRightActivityCrossReference_2_0()); }
		(
			{ before(grammarAccess.getConnectionAccess().getRightActivityIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConnectionAccess().getRightActivityIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getConnectionAccess().getRightActivityCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAbove__NAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAboveAccess().getNINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getUpdateAboveAccess().getNINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateBelow__NAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateBelowAccess().getNINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getUpdateBelowAccess().getNINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__NAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateChangeAccess().getNINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getUpdateChangeAccess().getNINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__MAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateChangeAccess().getMINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getUpdateChangeAccess().getMINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateIs__NAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateIsAccess().getNINTTerminalRuleCall_2_0_0()); }
		RULE_INT
		{ after(grammarAccess.getUpdateIsAccess().getNINTTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateIs__SAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateIsAccess().getSSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getUpdateIsAccess().getSSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateNot__NAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateNotAccess().getNINTTerminalRuleCall_2_0_0()); }
		RULE_INT
		{ after(grammarAccess.getUpdateNotAccess().getNINTTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateNot__SAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateNotAccess().getSSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getUpdateNotAccess().getSSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
