/*
 * generated by Xtext 2.24.0
 */
grammar InternalPpid;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package edu.dtu.s144874.thesis.ppid.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package edu.dtu.s144874.thesis.ppid.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import edu.dtu.s144874.thesis.ppid.services.PpidGrammarAccess;

}
@parser::members {
	private PpidGrammarAccess grammarAccess;

	public void setGrammarAccess(PpidGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity
entryRuleEntity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getGroup()); }
		(rule__Entity__Group__0)
		{ after(grammarAccess.getEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSource
entryRuleSource
:
{ before(grammarAccess.getSourceRule()); }
	 ruleSource
{ after(grammarAccess.getSourceRule()); } 
	 EOF 
;

// Rule Source
ruleSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceAccess().getGroup()); }
		(rule__Source__Group__0)
		{ after(grammarAccess.getSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSink
entryRuleSink
:
{ before(grammarAccess.getSinkRule()); }
	 ruleSink
{ after(grammarAccess.getSinkRule()); } 
	 EOF 
;

// Rule Sink
ruleSink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSinkAccess().getGroup()); }
		(rule__Sink__Group__0)
		{ after(grammarAccess.getSinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayType
entryRuleArrayType
:
{ before(grammarAccess.getArrayTypeRule()); }
	 ruleArrayType
{ after(grammarAccess.getArrayTypeRule()); } 
	 EOF 
;

// Rule ArrayType
ruleArrayType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayTypeAccess().getGroup()); }
		(rule__ArrayType__Group__0)
		{ after(grammarAccess.getArrayTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntityReference
entryRuleEntityReference
:
{ before(grammarAccess.getEntityReferenceRule()); }
	 ruleEntityReference
{ after(grammarAccess.getEntityReferenceRule()); } 
	 EOF 
;

// Rule EntityReference
ruleEntityReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityReferenceAccess().getEntityAssignment()); }
		(rule__EntityReference__EntityAssignment)
		{ after(grammarAccess.getEntityReferenceAccess().getEntityAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleDataType
entryRuleSimpleDataType
:
{ before(grammarAccess.getSimpleDataTypeRule()); }
	 ruleSimpleDataType
{ after(grammarAccess.getSimpleDataTypeRule()); } 
	 EOF 
;

// Rule SimpleDataType
ruleSimpleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleDataTypeAccess().getTypeAssignment()); }
		(rule__SimpleDataType__TypeAssignment)
		{ after(grammarAccess.getSimpleDataTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperty
entryRuleProperty
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyAccess().getGroup()); }
		(rule__Property__Group__0)
		{ after(grammarAccess.getPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyReference
entryRulePropertyReference
:
{ before(grammarAccess.getPropertyReferenceRule()); }
	 rulePropertyReference
{ after(grammarAccess.getPropertyReferenceRule()); } 
	 EOF 
;

// Rule PropertyReference
rulePropertyReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyReferenceAccess().getNameAssignment()); }
		(rule__PropertyReference__NameAssignment)
		{ after(grammarAccess.getPropertyReferenceAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdate
entryRuleUpdate
:
{ before(grammarAccess.getUpdateRule()); }
	 ruleUpdate
{ after(grammarAccess.getUpdateRule()); } 
	 EOF 
;

// Rule Update
ruleUpdate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateAccess().getAlternatives()); }
		(rule__Update__Alternatives)
		{ after(grammarAccess.getUpdateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutputProperty
entryRuleOutputProperty
:
{ before(grammarAccess.getOutputPropertyRule()); }
	 ruleOutputProperty
{ after(grammarAccess.getOutputPropertyRule()); } 
	 EOF 
;

// Rule OutputProperty
ruleOutputProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputPropertyAccess().getGroup()); }
		(rule__OutputProperty__Group__0)
		{ after(grammarAccess.getOutputPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutputValue
entryRuleOutputValue
:
{ before(grammarAccess.getOutputValueRule()); }
	 ruleOutputValue
{ after(grammarAccess.getOutputValueRule()); } 
	 EOF 
;

// Rule OutputValue
ruleOutputValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputValueAccess().getAlternatives()); }
		(rule__OutputValue__Alternatives)
		{ after(grammarAccess.getOutputValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutput
entryRuleOutput
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputAccess().getGroup()); }
		(rule__Output__Group__0)
		{ after(grammarAccess.getOutputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSourceUpdate
entryRuleSourceUpdate
:
{ before(grammarAccess.getSourceUpdateRule()); }
	 ruleSourceUpdate
{ after(grammarAccess.getSourceUpdateRule()); } 
	 EOF 
;

// Rule SourceUpdate
ruleSourceUpdate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceUpdateAccess().getGroup()); }
		(rule__SourceUpdate__Group__0)
		{ after(grammarAccess.getSourceUpdateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtendedRule
entryRuleExtendedRule
:
{ before(grammarAccess.getExtendedRuleRule()); }
	 ruleExtendedRule
{ after(grammarAccess.getExtendedRuleRule()); } 
	 EOF 
;

// Rule ExtendedRule
ruleExtendedRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtendedRuleAccess().getGroup()); }
		(rule__ExtendedRule__Group__0)
		{ after(grammarAccess.getExtendedRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcess
entryRuleProcess
:
{ before(grammarAccess.getProcessRule()); }
	 ruleProcess
{ after(grammarAccess.getProcessRule()); } 
	 EOF 
;

// Rule Process
ruleProcess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessAccess().getGroup()); }
		(rule__Process__Group__0)
		{ after(grammarAccess.getProcessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnections
entryRuleConnections
:
{ before(grammarAccess.getConnectionsRule()); }
	 ruleConnections
{ after(grammarAccess.getConnectionsRule()); } 
	 EOF 
;

// Rule Connections
ruleConnections 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectionsAccess().getGroup()); }
		(rule__Connections__Group__0)
		{ after(grammarAccess.getConnectionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnection
entryRuleConnection
:
{ before(grammarAccess.getConnectionRule()); }
	 ruleConnection
{ after(grammarAccess.getConnectionRule()); } 
	 EOF 
;

// Rule Connection
ruleConnection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectionAccess().getAlternatives()); }
		(rule__Connection__Alternatives)
		{ after(grammarAccess.getConnectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOneWayConnection
entryRuleOneWayConnection
:
{ before(grammarAccess.getOneWayConnectionRule()); }
	 ruleOneWayConnection
{ after(grammarAccess.getOneWayConnectionRule()); } 
	 EOF 
;

// Rule OneWayConnection
ruleOneWayConnection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOneWayConnectionAccess().getHyphenMinusGreaterThanSignKeyword()); }
		'->'
		{ after(grammarAccess.getOneWayConnectionAccess().getHyphenMinusGreaterThanSignKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBothWayConnection
entryRuleBothWayConnection
:
{ before(grammarAccess.getBothWayConnectionRule()); }
	 ruleBothWayConnection
{ after(grammarAccess.getBothWayConnectionRule()); } 
	 EOF 
;

// Rule BothWayConnection
ruleBothWayConnection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBothWayConnectionAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword()); }
		'<->'
		{ after(grammarAccess.getBothWayConnectionAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStartRule
entryRuleStartRule
:
{ before(grammarAccess.getStartRuleRule()); }
	 ruleStartRule
{ after(grammarAccess.getStartRuleRule()); } 
	 EOF 
;

// Rule StartRule
ruleStartRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartRuleAccess().getGroup()); }
		(rule__StartRule__Group__0)
		{ after(grammarAccess.getStartRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndRule
entryRuleEndRule
:
{ before(grammarAccess.getEndRuleRule()); }
	 ruleEndRule
{ after(grammarAccess.getEndRuleRule()); } 
	 EOF 
;

// Rule EndRule
ruleEndRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndRuleAccess().getGroup()); }
		(rule__EndRule__Group__0)
		{ after(grammarAccess.getEndRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateAbove
entryRuleUpdateAbove
:
{ before(grammarAccess.getUpdateAboveRule()); }
	 ruleUpdateAbove
{ after(grammarAccess.getUpdateAboveRule()); } 
	 EOF 
;

// Rule UpdateAbove
ruleUpdateAbove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateAboveAccess().getGroup()); }
		(rule__UpdateAbove__Group__0)
		{ after(grammarAccess.getUpdateAboveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateBelow
entryRuleUpdateBelow
:
{ before(grammarAccess.getUpdateBelowRule()); }
	 ruleUpdateBelow
{ after(grammarAccess.getUpdateBelowRule()); } 
	 EOF 
;

// Rule UpdateBelow
ruleUpdateBelow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateBelowAccess().getGroup()); }
		(rule__UpdateBelow__Group__0)
		{ after(grammarAccess.getUpdateBelowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateChange
entryRuleUpdateChange
:
{ before(grammarAccess.getUpdateChangeRule()); }
	 ruleUpdateChange
{ after(grammarAccess.getUpdateChangeRule()); } 
	 EOF 
;

// Rule UpdateChange
ruleUpdateChange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateChangeAccess().getGroup()); }
		(rule__UpdateChange__Group__0)
		{ after(grammarAccess.getUpdateChangeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateIs
entryRuleUpdateIs
:
{ before(grammarAccess.getUpdateIsRule()); }
	 ruleUpdateIs
{ after(grammarAccess.getUpdateIsRule()); } 
	 EOF 
;

// Rule UpdateIs
ruleUpdateIs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateIsAccess().getGroup()); }
		(rule__UpdateIs__Group__0)
		{ after(grammarAccess.getUpdateIsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateNot
entryRuleUpdateNot
:
{ before(grammarAccess.getUpdateNotRule()); }
	 ruleUpdateNot
{ after(grammarAccess.getUpdateNotRule()); } 
	 EOF 
;

// Rule UpdateNot
ruleUpdateNot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateNotAccess().getGroup()); }
		(rule__UpdateNot__Group__0)
		{ after(grammarAccess.getUpdateNotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule PrimitiveType
rulePrimitiveType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
		(rule__PrimitiveType__Alternatives)
		{ after(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getEntityReferenceParserRuleCall_0()); }
		ruleEntityReference
		{ after(grammarAccess.getTypeAccess().getEntityReferenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getSimpleDataTypeParserRuleCall_1()); }
		ruleSimpleDataType
		{ after(grammarAccess.getTypeAccess().getSimpleDataTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getArrayTypeParserRuleCall_2()); }
		ruleArrayType
		{ after(grammarAccess.getTypeAccess().getArrayTypeParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getUpdateAboveParserRuleCall_0()); }
		ruleUpdateAbove
		{ after(grammarAccess.getUpdateAccess().getUpdateAboveParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUpdateAccess().getUpdateBelowParserRuleCall_1()); }
		ruleUpdateBelow
		{ after(grammarAccess.getUpdateAccess().getUpdateBelowParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getUpdateAccess().getUpdateChangeParserRuleCall_2()); }
		ruleUpdateChange
		{ after(grammarAccess.getUpdateAccess().getUpdateChangeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getUpdateAccess().getUpdateIsParserRuleCall_3()); }
		ruleUpdateIs
		{ after(grammarAccess.getUpdateAccess().getUpdateIsParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getUpdateAccess().getUpdateNotParserRuleCall_4()); }
		ruleUpdateNot
		{ after(grammarAccess.getUpdateAccess().getUpdateNotParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputValueAccess().getValueIntAssignment_0()); }
		(rule__OutputValue__ValueIntAssignment_0)
		{ after(grammarAccess.getOutputValueAccess().getValueIntAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getOutputValueAccess().getValueStringAssignment_1()); }
		(rule__OutputValue__ValueStringAssignment_1)
		{ after(grammarAccess.getOutputValueAccess().getValueStringAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getOutputValueAccess().getValueRefAssignment_2()); }
		(rule__OutputValue__ValueRefAssignment_2)
		{ after(grammarAccess.getOutputValueAccess().getValueRefAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionAccess().getOneWayConnectionParserRuleCall_0()); }
		ruleOneWayConnection
		{ after(grammarAccess.getConnectionAccess().getOneWayConnectionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConnectionAccess().getBothWayConnectionParserRuleCall_1()); }
		ruleBothWayConnection
		{ after(grammarAccess.getConnectionAccess().getBothWayConnectionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getNumberEnumLiteralDeclaration_0()); }
		('number')
		{ after(grammarAccess.getPrimitiveTypeAccess().getNumberEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getStringEnumLiteralDeclaration_1()); }
		('string')
		{ after(grammarAccess.getPrimitiveTypeAccess().getStringEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getEntitesAssignment_0()); }
	(rule__Model__EntitesAssignment_0)*
	{ after(grammarAccess.getModelAccess().getEntitesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSourcesAssignment_1()); }
	(rule__Model__SourcesAssignment_1)*
	{ after(grammarAccess.getModelAccess().getSourcesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSinksAssignment_2()); }
	(rule__Model__SinksAssignment_2)*
	{ after(grammarAccess.getModelAccess().getSinksAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRulesAssignment_3()); }
	(rule__Model__RulesAssignment_3)*
	{ after(grammarAccess.getModelAccess().getRulesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getStartAssignment_4()); }
	(rule__Model__StartAssignment_4)?
	{ after(grammarAccess.getModelAccess().getStartAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__5__Impl
	rule__Model__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getEndAssignment_5()); }
	(rule__Model__EndAssignment_5)?
	{ after(grammarAccess.getModelAccess().getEndAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getProcessesAssignment_6()); }
	(rule__Model__ProcessesAssignment_6)*
	{ after(grammarAccess.getModelAccess().getProcessesAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
	'entity'
	{ after(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
	(rule__Entity__NameAssignment_1)
	{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getPropertiesAssignment_3()); }
	(rule__Entity__PropertiesAssignment_3)*
	{ after(grammarAccess.getEntityAccess().getPropertiesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__0__Impl
	rule__Source__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getSourceKeyword_0()); }
	'source'
	{ after(grammarAccess.getSourceAccess().getSourceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__1__Impl
	rule__Source__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getNameAssignment_1()); }
	(rule__Source__NameAssignment_1)
	{ after(grammarAccess.getSourceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__2__Impl
	rule__Source__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getTopicAssignment_2()); }
	(rule__Source__TopicAssignment_2)
	{ after(grammarAccess.getSourceAccess().getTopicAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getEntityAssignment_3()); }
	(rule__Source__EntityAssignment_3)
	{ after(grammarAccess.getSourceAccess().getEntityAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sink__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sink__Group__0__Impl
	rule__Sink__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sink__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkAccess().getSinkKeyword_0()); }
	'sink'
	{ after(grammarAccess.getSinkAccess().getSinkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sink__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sink__Group__1__Impl
	rule__Sink__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sink__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkAccess().getNameAssignment_1()); }
	(rule__Sink__NameAssignment_1)
	{ after(grammarAccess.getSinkAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sink__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sink__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sink__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSinkAccess().getEntityAssignment_2()); }
	(rule__Sink__EntityAssignment_2)
	{ after(grammarAccess.getSinkAccess().getEntityAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__0__Impl
	rule__ArrayType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__1__Impl
	rule__ArrayType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getTypeAssignment_1()); }
	(rule__ArrayType__TypeAssignment_1)
	{ after(grammarAccess.getArrayTypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getNameAssignment_0()); }
	(rule__Property__NameAssignment_0)
	{ after(grammarAccess.getPropertyAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__1__Impl
	rule__Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getPropertyAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getTypeAssignment_2()); }
	(rule__Property__TypeAssignment_2)
	{ after(grammarAccess.getPropertyAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputProperty__Group__0__Impl
	rule__OutputProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputPropertyAccess().getNameAssignment_0()); }
	(rule__OutputProperty__NameAssignment_0)
	{ after(grammarAccess.getOutputPropertyAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputProperty__Group__1__Impl
	rule__OutputProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputPropertyAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getOutputPropertyAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputPropertyAccess().getValueAssignment_2()); }
	(rule__OutputProperty__ValueAssignment_2)
	{ after(grammarAccess.getOutputPropertyAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__0__Impl
	rule__Output__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getOutputAction_0()); }
	()
	{ after(grammarAccess.getOutputAccess().getOutputAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__1__Impl
	rule__Output__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getOutputAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__2__Impl
	rule__Output__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getPropertiesAssignment_2()); }
	(rule__Output__PropertiesAssignment_2)
	{ after(grammarAccess.getOutputAccess().getPropertiesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__3__Impl
	rule__Output__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getGroup_3()); }
	(rule__Output__Group_3__0)*
	{ after(grammarAccess.getOutputAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getOutputAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_3__0__Impl
	rule__Output__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getOutputAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getPropertiesAssignment_3_1()); }
	(rule__Output__PropertiesAssignment_3_1)
	{ after(grammarAccess.getOutputAccess().getPropertiesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceUpdate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceUpdate__Group__0__Impl
	rule__SourceUpdate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceUpdate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceUpdateAccess().getSourceAssignment_0()); }
	(rule__SourceUpdate__SourceAssignment_0)
	{ after(grammarAccess.getSourceUpdateAccess().getSourceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceUpdate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceUpdate__Group__1__Impl
	rule__SourceUpdate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceUpdate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceUpdateAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getSourceUpdateAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceUpdate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceUpdate__Group__2__Impl
	rule__SourceUpdate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceUpdate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceUpdateAccess().getPropertyAssignment_2()); }
	(rule__SourceUpdate__PropertyAssignment_2)
	{ after(grammarAccess.getSourceUpdateAccess().getPropertyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceUpdate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceUpdate__Group__3__Impl
	rule__SourceUpdate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceUpdate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceUpdateAccess().getFullStopKeyword_3()); }
	'.'
	{ after(grammarAccess.getSourceUpdateAccess().getFullStopKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceUpdate__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceUpdate__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceUpdate__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceUpdateAccess().getUpdateAssignment_4()); }
	(rule__SourceUpdate__UpdateAssignment_4)
	{ after(grammarAccess.getSourceUpdateAccess().getUpdateAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getUpdatesAssignment_0()); }
	(rule__Rule__UpdatesAssignment_0)
	{ after(grammarAccess.getRuleAccess().getUpdatesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getGroup_1()); }
	(rule__Rule__Group_1__0)*
	{ after(grammarAccess.getRuleAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_1__0__Impl
	rule__Rule__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getAndKeyword_1_0()); }
	'and'
	{ after(grammarAccess.getRuleAccess().getAndKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getUpdatesAssignment_1_1()); }
	(rule__Rule__UpdatesAssignment_1_1)
	{ after(grammarAccess.getRuleAccess().getUpdatesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendedRule__Group__0__Impl
	rule__ExtendedRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendedRuleAccess().getRuleKeyword_0()); }
	'rule'
	{ after(grammarAccess.getExtendedRuleAccess().getRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendedRule__Group__1__Impl
	rule__ExtendedRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendedRuleAccess().getNameAssignment_1()); }
	(rule__ExtendedRule__NameAssignment_1)
	{ after(grammarAccess.getExtendedRuleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendedRule__Group__2__Impl
	rule__ExtendedRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendedRuleAccess().getRuleAssignment_2()); }
	(rule__ExtendedRule__RuleAssignment_2)
	{ after(grammarAccess.getExtendedRuleAccess().getRuleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendedRule__Group__3__Impl
	rule__ExtendedRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendedRuleAccess().getGroup_3()); }
	(rule__ExtendedRule__Group_3__0)?
	{ after(grammarAccess.getExtendedRuleAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendedRule__Group__4__Impl
	rule__ExtendedRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendedRuleAccess().getIntoKeyword_4()); }
	'into'
	{ after(grammarAccess.getExtendedRuleAccess().getIntoKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendedRule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendedRuleAccess().getSinkAssignment_5()); }
	(rule__ExtendedRule__SinkAssignment_5)
	{ after(grammarAccess.getExtendedRuleAccess().getSinkAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedRule__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendedRule__Group_3__0__Impl
	rule__ExtendedRule__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedRule__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendedRuleAccess().getEqualsSignGreaterThanSignKeyword_3_0()); }
	'=>'
	{ after(grammarAccess.getExtendedRuleAccess().getEqualsSignGreaterThanSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedRule__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendedRule__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedRule__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendedRuleAccess().getOutputAssignment_3_1()); }
	(rule__ExtendedRule__OutputAssignment_3_1)
	{ after(grammarAccess.getExtendedRuleAccess().getOutputAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__0__Impl
	rule__Process__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getProcessKeyword_0()); }
	'process'
	{ after(grammarAccess.getProcessAccess().getProcessKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__1__Impl
	rule__Process__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getNameAssignment_1()); }
	(rule__Process__NameAssignment_1)
	{ after(grammarAccess.getProcessAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__2__Impl
	rule__Process__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getProcessAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__3__Impl
	rule__Process__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getStartRuleAssignment_3()); }
	(rule__Process__StartRuleAssignment_3)
	{ after(grammarAccess.getProcessAccess().getStartRuleAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__4__Impl
	rule__Process__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getConnectionsAssignment_4()); }
	(rule__Process__ConnectionsAssignment_4)*
	{ after(grammarAccess.getProcessAccess().getConnectionsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getProcessAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connections__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connections__Group__0__Impl
	rule__Connections__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connections__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionsAccess().getLeftAssignment_0()); }
	(rule__Connections__LeftAssignment_0)
	{ after(grammarAccess.getConnectionsAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connections__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connections__Group__1__Impl
	rule__Connections__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connections__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionsAccess().getConnectionAssignment_1()); }
	(rule__Connections__ConnectionAssignment_1)
	{ after(grammarAccess.getConnectionsAccess().getConnectionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connections__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connections__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connections__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionsAccess().getRightAssignment_2()); }
	(rule__Connections__RightAssignment_2)
	{ after(grammarAccess.getConnectionsAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartRule__Group__0__Impl
	rule__StartRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartRuleAccess().getStartKeyword_0()); }
	'start'
	{ after(grammarAccess.getStartRuleAccess().getStartKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartRule__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartRuleAccess().getRuleAssignment_1()); }
	(rule__StartRule__RuleAssignment_1)
	{ after(grammarAccess.getStartRuleAccess().getRuleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndRule__Group__0__Impl
	rule__EndRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndRuleAccess().getEndKeyword_0()); }
	'end'
	{ after(grammarAccess.getEndRuleAccess().getEndKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndRule__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndRuleAccess().getRuleAssignment_1()); }
	(rule__EndRule__RuleAssignment_1)
	{ after(grammarAccess.getEndRuleAccess().getRuleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateAbove__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateAbove__Group__0__Impl
	rule__UpdateAbove__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAbove__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAboveAccess().getAboveKeyword_0()); }
	'above'
	{ after(grammarAccess.getUpdateAboveAccess().getAboveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAbove__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateAbove__Group__1__Impl
	rule__UpdateAbove__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAbove__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAboveAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getUpdateAboveAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAbove__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateAbove__Group__2__Impl
	rule__UpdateAbove__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAbove__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAboveAccess().getNAssignment_2()); }
	(rule__UpdateAbove__NAssignment_2)
	{ after(grammarAccess.getUpdateAboveAccess().getNAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAbove__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateAbove__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAbove__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAboveAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getUpdateAboveAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateBelow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateBelow__Group__0__Impl
	rule__UpdateBelow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateBelow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateBelowAccess().getBelowKeyword_0()); }
	'below'
	{ after(grammarAccess.getUpdateBelowAccess().getBelowKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateBelow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateBelow__Group__1__Impl
	rule__UpdateBelow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateBelow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateBelowAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getUpdateBelowAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateBelow__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateBelow__Group__2__Impl
	rule__UpdateBelow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateBelow__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateBelowAccess().getNAssignment_2()); }
	(rule__UpdateBelow__NAssignment_2)
	{ after(grammarAccess.getUpdateBelowAccess().getNAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateBelow__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateBelow__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateBelow__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateBelowAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getUpdateBelowAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateChange__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateChange__Group__0__Impl
	rule__UpdateChange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateChangeAccess().getChangeKeyword_0()); }
	'change'
	{ after(grammarAccess.getUpdateChangeAccess().getChangeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateChange__Group__1__Impl
	rule__UpdateChange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateChangeAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getUpdateChangeAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateChange__Group__2__Impl
	rule__UpdateChange__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateChangeAccess().getNAssignment_2()); }
	(rule__UpdateChange__NAssignment_2)
	{ after(grammarAccess.getUpdateChangeAccess().getNAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateChange__Group__3__Impl
	rule__UpdateChange__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateChangeAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getUpdateChangeAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateChange__Group__4__Impl
	rule__UpdateChange__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateChangeAccess().getMAssignment_4()); }
	(rule__UpdateChange__MAssignment_4)
	{ after(grammarAccess.getUpdateChangeAccess().getMAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateChange__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateChangeAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getUpdateChangeAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateIs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateIs__Group__0__Impl
	rule__UpdateIs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateIs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateIsAccess().getIsKeyword_0()); }
	'is'
	{ after(grammarAccess.getUpdateIsAccess().getIsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateIs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateIs__Group__1__Impl
	rule__UpdateIs__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateIs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateIsAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getUpdateIsAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateIs__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateIs__Group__2__Impl
	rule__UpdateIs__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateIs__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateIsAccess().getNAssignment_2()); }
	(rule__UpdateIs__NAssignment_2)
	{ after(grammarAccess.getUpdateIsAccess().getNAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateIs__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateIs__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateIs__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateIsAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getUpdateIsAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateNot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateNot__Group__0__Impl
	rule__UpdateNot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateNot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateNotAccess().getNotKeyword_0()); }
	'not'
	{ after(grammarAccess.getUpdateNotAccess().getNotKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateNot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateNot__Group__1__Impl
	rule__UpdateNot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateNot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateNotAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getUpdateNotAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateNot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateNot__Group__2__Impl
	rule__UpdateNot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateNot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateNotAccess().getNAssignment_2()); }
	(rule__UpdateNot__NAssignment_2)
	{ after(grammarAccess.getUpdateNotAccess().getNAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateNot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateNot__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateNot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateNotAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getUpdateNotAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__EntitesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getEntitesEntityParserRuleCall_0_0()); }
		ruleEntity
		{ after(grammarAccess.getModelAccess().getEntitesEntityParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__SourcesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getSourcesSourceParserRuleCall_1_0()); }
		ruleSource
		{ after(grammarAccess.getModelAccess().getSourcesSourceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__SinksAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getSinksSinkParserRuleCall_2_0()); }
		ruleSink
		{ after(grammarAccess.getModelAccess().getSinksSinkParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__RulesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getRulesExtendedRuleParserRuleCall_3_0()); }
		ruleExtendedRule
		{ after(grammarAccess.getModelAccess().getRulesExtendedRuleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__StartAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getStartStartRuleParserRuleCall_4_0()); }
		ruleStartRule
		{ after(grammarAccess.getModelAccess().getStartStartRuleParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__EndAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getEndEndRuleParserRuleCall_5_0()); }
		ruleEndRule
		{ after(grammarAccess.getModelAccess().getEndEndRuleParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ProcessesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getProcessesProcessParserRuleCall_6_0()); }
		ruleProcess
		{ after(grammarAccess.getModelAccess().getProcessesProcessParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__PropertiesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getPropertiesPropertyParserRuleCall_3_0()); }
		ruleProperty
		{ after(grammarAccess.getEntityAccess().getPropertiesPropertyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSourceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__TopicAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getTopicSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getSourceAccess().getTopicSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__EntityAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getEntityEntityCrossReference_3_0()); }
		(
			{ before(grammarAccess.getSourceAccess().getEntityEntityIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSourceAccess().getEntityEntityIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getSourceAccess().getEntityEntityCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sink__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSinkAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSinkAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sink__EntityAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSinkAccess().getEntityEntityCrossReference_2_0()); }
		(
			{ before(grammarAccess.getSinkAccess().getEntityEntityIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSinkAccess().getEntityEntityIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getSinkAccess().getEntityEntityCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getArrayTypeAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityReference__EntityAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityReferenceAccess().getEntityEntityCrossReference_0()); }
		(
			{ before(grammarAccess.getEntityReferenceAccess().getEntityEntityIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEntityReferenceAccess().getEntityEntityIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getEntityReferenceAccess().getEntityEntityCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleDataType__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleDataTypeAccess().getTypePrimitiveTypeEnumRuleCall_0()); }
		rulePrimitiveType
		{ after(grammarAccess.getSimpleDataTypeAccess().getTypePrimitiveTypeEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getPropertyAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyReferenceAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getPropertyReferenceAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputProperty__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getOutputPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputProperty__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputPropertyAccess().getValueOutputValueParserRuleCall_2_0()); }
		ruleOutputValue
		{ after(grammarAccess.getOutputPropertyAccess().getValueOutputValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputValue__ValueIntAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputValueAccess().getValueIntINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getOutputValueAccess().getValueIntINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputValue__ValueStringAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputValueAccess().getValueStringSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getOutputValueAccess().getValueStringSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputValue__ValueRefAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputValueAccess().getValueRefPropertyReferenceParserRuleCall_2_0()); }
		rulePropertyReference
		{ after(grammarAccess.getOutputValueAccess().getValueRefPropertyReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__PropertiesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getPropertiesOutputPropertyParserRuleCall_2_0()); }
		ruleOutputProperty
		{ after(grammarAccess.getOutputAccess().getPropertiesOutputPropertyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__PropertiesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getPropertiesOutputPropertyParserRuleCall_3_1_0()); }
		ruleOutputProperty
		{ after(grammarAccess.getOutputAccess().getPropertiesOutputPropertyParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceUpdate__SourceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceUpdateAccess().getSourceSourceCrossReference_0_0()); }
		(
			{ before(grammarAccess.getSourceUpdateAccess().getSourceSourceIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSourceUpdateAccess().getSourceSourceIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getSourceUpdateAccess().getSourceSourceCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceUpdate__PropertyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceUpdateAccess().getPropertyPropertyCrossReference_2_0()); }
		(
			{ before(grammarAccess.getSourceUpdateAccess().getPropertyPropertyIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSourceUpdateAccess().getPropertyPropertyIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getSourceUpdateAccess().getPropertyPropertyCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceUpdate__UpdateAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceUpdateAccess().getUpdateUpdateParserRuleCall_4_0()); }
		ruleUpdate
		{ after(grammarAccess.getSourceUpdateAccess().getUpdateUpdateParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__UpdatesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getUpdatesSourceUpdateParserRuleCall_0_0()); }
		ruleSourceUpdate
		{ after(grammarAccess.getRuleAccess().getUpdatesSourceUpdateParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__UpdatesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getUpdatesSourceUpdateParserRuleCall_1_1_0()); }
		ruleSourceUpdate
		{ after(grammarAccess.getRuleAccess().getUpdatesSourceUpdateParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedRule__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendedRuleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getExtendedRuleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedRule__RuleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendedRuleAccess().getRuleRuleParserRuleCall_2_0()); }
		ruleRule
		{ after(grammarAccess.getExtendedRuleAccess().getRuleRuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedRule__OutputAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendedRuleAccess().getOutputOutputParserRuleCall_3_1_0()); }
		ruleOutput
		{ after(grammarAccess.getExtendedRuleAccess().getOutputOutputParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedRule__SinkAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendedRuleAccess().getSinkSinkCrossReference_5_0()); }
		(
			{ before(grammarAccess.getExtendedRuleAccess().getSinkSinkIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExtendedRuleAccess().getSinkSinkIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getExtendedRuleAccess().getSinkSinkCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__StartRuleAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getStartRuleStartRuleParserRuleCall_3_0()); }
		ruleStartRule
		{ after(grammarAccess.getProcessAccess().getStartRuleStartRuleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__ConnectionsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getConnectionsConnectionsParserRuleCall_4_0()); }
		ruleConnections
		{ after(grammarAccess.getProcessAccess().getConnectionsConnectionsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connections__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionsAccess().getLeftExtendedRuleCrossReference_0_0()); }
		(
			{ before(grammarAccess.getConnectionsAccess().getLeftExtendedRuleIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConnectionsAccess().getLeftExtendedRuleIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getConnectionsAccess().getLeftExtendedRuleCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connections__ConnectionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionsAccess().getConnectionConnectionParserRuleCall_1_0()); }
		ruleConnection
		{ after(grammarAccess.getConnectionsAccess().getConnectionConnectionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connections__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionsAccess().getRightExtendedRuleCrossReference_2_0()); }
		(
			{ before(grammarAccess.getConnectionsAccess().getRightExtendedRuleIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConnectionsAccess().getRightExtendedRuleIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getConnectionsAccess().getRightExtendedRuleCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartRule__RuleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartRuleAccess().getRuleRuleParserRuleCall_1_0()); }
		ruleRule
		{ after(grammarAccess.getStartRuleAccess().getRuleRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndRule__RuleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndRuleAccess().getRuleRuleParserRuleCall_1_0()); }
		ruleRule
		{ after(grammarAccess.getEndRuleAccess().getRuleRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAbove__NAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAboveAccess().getNINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getUpdateAboveAccess().getNINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateBelow__NAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateBelowAccess().getNINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getUpdateBelowAccess().getNINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__NAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateChangeAccess().getNINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getUpdateChangeAccess().getNINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateChange__MAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateChangeAccess().getMINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getUpdateChangeAccess().getMINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateIs__NAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateIsAccess().getNINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getUpdateIsAccess().getNINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateNot__NAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateNotAccess().getNINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getUpdateNotAccess().getNINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
